/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var auth_pb = require('../auth_pb.js');
goog.exportSymbol('proto.go.micro.auth.Access', null, global);
goog.exportSymbol('proto.go.micro.auth.CreateRequest', null, global);
goog.exportSymbol('proto.go.micro.auth.CreateResponse', null, global);
goog.exportSymbol('proto.go.micro.auth.DeleteRequest', null, global);
goog.exportSymbol('proto.go.micro.auth.DeleteResponse', null, global);
goog.exportSymbol('proto.go.micro.auth.ListRequest', null, global);
goog.exportSymbol('proto.go.micro.auth.ListResponse', null, global);
goog.exportSymbol('proto.go.micro.auth.Rule', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.go.micro.auth.Rule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.go.micro.auth.Rule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.go.micro.auth.Rule.displayName = 'proto.go.micro.auth.Rule';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.go.micro.auth.Rule.prototype.toObject = function(opt_includeInstance) {
  return proto.go.micro.auth.Rule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.go.micro.auth.Rule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.go.micro.auth.Rule.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    role: jspb.Message.getFieldWithDefault(msg, 2, ""),
    resource: (f = msg.getResource()) && auth_pb.Resource.toObject(includeInstance, f),
    access: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.go.micro.auth.Rule}
 */
proto.go.micro.auth.Rule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.go.micro.auth.Rule;
  return proto.go.micro.auth.Rule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.go.micro.auth.Rule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.go.micro.auth.Rule}
 */
proto.go.micro.auth.Rule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 3:
      var value = new auth_pb.Resource;
      reader.readMessage(value,auth_pb.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 4:
      var value = /** @type {!proto.go.micro.auth.Access} */ (reader.readEnum());
      msg.setAccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.go.micro.auth.Rule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.go.micro.auth.Rule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.go.micro.auth.Rule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.go.micro.auth.Rule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      auth_pb.Resource.serializeBinaryToWriter
    );
  }
  f = message.getAccess();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.go.micro.auth.Rule.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.go.micro.auth.Rule.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string role = 2;
 * @return {string}
 */
proto.go.micro.auth.Rule.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.go.micro.auth.Rule.prototype.setRole = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Resource resource = 3;
 * @return {?proto.go.micro.auth.Resource}
 */
proto.go.micro.auth.Rule.prototype.getResource = function() {
  return /** @type{?proto.go.micro.auth.Resource} */ (
    jspb.Message.getWrapperField(this, auth_pb.Resource, 3));
};


/** @param {?proto.go.micro.auth.Resource|undefined} value */
proto.go.micro.auth.Rule.prototype.setResource = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.go.micro.auth.Rule.prototype.clearResource = function() {
  this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.go.micro.auth.Rule.prototype.hasResource = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Access access = 4;
 * @return {!proto.go.micro.auth.Access}
 */
proto.go.micro.auth.Rule.prototype.getAccess = function() {
  return /** @type {!proto.go.micro.auth.Access} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.go.micro.auth.Access} value */
proto.go.micro.auth.Rule.prototype.setAccess = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.go.micro.auth.CreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.go.micro.auth.CreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.go.micro.auth.CreateRequest.displayName = 'proto.go.micro.auth.CreateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.go.micro.auth.CreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.go.micro.auth.CreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.go.micro.auth.CreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.go.micro.auth.CreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resource: (f = msg.getResource()) && auth_pb.Resource.toObject(includeInstance, f),
    access: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.go.micro.auth.CreateRequest}
 */
proto.go.micro.auth.CreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.go.micro.auth.CreateRequest;
  return proto.go.micro.auth.CreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.go.micro.auth.CreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.go.micro.auth.CreateRequest}
 */
proto.go.micro.auth.CreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 2:
      var value = new auth_pb.Resource;
      reader.readMessage(value,auth_pb.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 3:
      var value = /** @type {!proto.go.micro.auth.Access} */ (reader.readEnum());
      msg.setAccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.go.micro.auth.CreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.go.micro.auth.CreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.go.micro.auth.CreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.go.micro.auth.CreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      auth_pb.Resource.serializeBinaryToWriter
    );
  }
  f = message.getAccess();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string role = 1;
 * @return {string}
 */
proto.go.micro.auth.CreateRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.go.micro.auth.CreateRequest.prototype.setRole = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Resource resource = 2;
 * @return {?proto.go.micro.auth.Resource}
 */
proto.go.micro.auth.CreateRequest.prototype.getResource = function() {
  return /** @type{?proto.go.micro.auth.Resource} */ (
    jspb.Message.getWrapperField(this, auth_pb.Resource, 2));
};


/** @param {?proto.go.micro.auth.Resource|undefined} value */
proto.go.micro.auth.CreateRequest.prototype.setResource = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.go.micro.auth.CreateRequest.prototype.clearResource = function() {
  this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.go.micro.auth.CreateRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Access access = 3;
 * @return {!proto.go.micro.auth.Access}
 */
proto.go.micro.auth.CreateRequest.prototype.getAccess = function() {
  return /** @type {!proto.go.micro.auth.Access} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.go.micro.auth.Access} value */
proto.go.micro.auth.CreateRequest.prototype.setAccess = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.go.micro.auth.CreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.go.micro.auth.CreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.go.micro.auth.CreateResponse.displayName = 'proto.go.micro.auth.CreateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.go.micro.auth.CreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.go.micro.auth.CreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.go.micro.auth.CreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.go.micro.auth.CreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.go.micro.auth.CreateResponse}
 */
proto.go.micro.auth.CreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.go.micro.auth.CreateResponse;
  return proto.go.micro.auth.CreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.go.micro.auth.CreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.go.micro.auth.CreateResponse}
 */
proto.go.micro.auth.CreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.go.micro.auth.CreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.go.micro.auth.CreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.go.micro.auth.CreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.go.micro.auth.CreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.go.micro.auth.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.go.micro.auth.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.go.micro.auth.DeleteRequest.displayName = 'proto.go.micro.auth.DeleteRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.go.micro.auth.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.go.micro.auth.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.go.micro.auth.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.go.micro.auth.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resource: (f = msg.getResource()) && auth_pb.Resource.toObject(includeInstance, f),
    access: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.go.micro.auth.DeleteRequest}
 */
proto.go.micro.auth.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.go.micro.auth.DeleteRequest;
  return proto.go.micro.auth.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.go.micro.auth.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.go.micro.auth.DeleteRequest}
 */
proto.go.micro.auth.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 2:
      var value = new auth_pb.Resource;
      reader.readMessage(value,auth_pb.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 3:
      var value = /** @type {!proto.go.micro.auth.Access} */ (reader.readEnum());
      msg.setAccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.go.micro.auth.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.go.micro.auth.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.go.micro.auth.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.go.micro.auth.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      auth_pb.Resource.serializeBinaryToWriter
    );
  }
  f = message.getAccess();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string role = 1;
 * @return {string}
 */
proto.go.micro.auth.DeleteRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.go.micro.auth.DeleteRequest.prototype.setRole = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Resource resource = 2;
 * @return {?proto.go.micro.auth.Resource}
 */
proto.go.micro.auth.DeleteRequest.prototype.getResource = function() {
  return /** @type{?proto.go.micro.auth.Resource} */ (
    jspb.Message.getWrapperField(this, auth_pb.Resource, 2));
};


/** @param {?proto.go.micro.auth.Resource|undefined} value */
proto.go.micro.auth.DeleteRequest.prototype.setResource = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.go.micro.auth.DeleteRequest.prototype.clearResource = function() {
  this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.go.micro.auth.DeleteRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Access access = 3;
 * @return {!proto.go.micro.auth.Access}
 */
proto.go.micro.auth.DeleteRequest.prototype.getAccess = function() {
  return /** @type {!proto.go.micro.auth.Access} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.go.micro.auth.Access} value */
proto.go.micro.auth.DeleteRequest.prototype.setAccess = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.go.micro.auth.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.go.micro.auth.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.go.micro.auth.DeleteResponse.displayName = 'proto.go.micro.auth.DeleteResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.go.micro.auth.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.go.micro.auth.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.go.micro.auth.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.go.micro.auth.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.go.micro.auth.DeleteResponse}
 */
proto.go.micro.auth.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.go.micro.auth.DeleteResponse;
  return proto.go.micro.auth.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.go.micro.auth.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.go.micro.auth.DeleteResponse}
 */
proto.go.micro.auth.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.go.micro.auth.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.go.micro.auth.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.go.micro.auth.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.go.micro.auth.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.go.micro.auth.ListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.go.micro.auth.ListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.go.micro.auth.ListRequest.displayName = 'proto.go.micro.auth.ListRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.go.micro.auth.ListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.go.micro.auth.ListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.go.micro.auth.ListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.go.micro.auth.ListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.go.micro.auth.ListRequest}
 */
proto.go.micro.auth.ListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.go.micro.auth.ListRequest;
  return proto.go.micro.auth.ListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.go.micro.auth.ListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.go.micro.auth.ListRequest}
 */
proto.go.micro.auth.ListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.go.micro.auth.ListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.go.micro.auth.ListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.go.micro.auth.ListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.go.micro.auth.ListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.go.micro.auth.ListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.go.micro.auth.ListResponse.repeatedFields_, null);
};
goog.inherits(proto.go.micro.auth.ListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.go.micro.auth.ListResponse.displayName = 'proto.go.micro.auth.ListResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.go.micro.auth.ListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.go.micro.auth.ListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.go.micro.auth.ListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.go.micro.auth.ListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.go.micro.auth.ListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rulesList: jspb.Message.toObjectList(msg.getRulesList(),
    proto.go.micro.auth.Rule.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.go.micro.auth.ListResponse}
 */
proto.go.micro.auth.ListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.go.micro.auth.ListResponse;
  return proto.go.micro.auth.ListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.go.micro.auth.ListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.go.micro.auth.ListResponse}
 */
proto.go.micro.auth.ListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.go.micro.auth.Rule;
      reader.readMessage(value,proto.go.micro.auth.Rule.deserializeBinaryFromReader);
      msg.addRules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.go.micro.auth.ListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.go.micro.auth.ListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.go.micro.auth.ListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.go.micro.auth.ListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.go.micro.auth.Rule.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Rule rules = 1;
 * @return {!Array<!proto.go.micro.auth.Rule>}
 */
proto.go.micro.auth.ListResponse.prototype.getRulesList = function() {
  return /** @type{!Array<!proto.go.micro.auth.Rule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.go.micro.auth.Rule, 1));
};


/** @param {!Array<!proto.go.micro.auth.Rule>} value */
proto.go.micro.auth.ListResponse.prototype.setRulesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.go.micro.auth.Rule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.go.micro.auth.Rule}
 */
proto.go.micro.auth.ListResponse.prototype.addRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.go.micro.auth.Rule, opt_index);
};


proto.go.micro.auth.ListResponse.prototype.clearRulesList = function() {
  this.setRulesList([]);
};


/**
 * @enum {number}
 */
proto.go.micro.auth.Access = {
  UNKNOWN: 0,
  GRANTED: 1,
  DENIED: 2
};

goog.object.extend(exports, proto.go.micro.auth);
