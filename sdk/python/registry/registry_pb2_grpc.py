# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from registry import registry_pb2 as registry_dot_registry__pb2


class RegistryStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetService = channel.unary_unary(
        '/go.micro.registry.Registry/GetService',
        request_serializer=registry_dot_registry__pb2.GetRequest.SerializeToString,
        response_deserializer=registry_dot_registry__pb2.GetResponse.FromString,
        )
    self.Register = channel.unary_unary(
        '/go.micro.registry.Registry/Register',
        request_serializer=registry_dot_registry__pb2.Service.SerializeToString,
        response_deserializer=registry_dot_registry__pb2.EmptyResponse.FromString,
        )
    self.Deregister = channel.unary_unary(
        '/go.micro.registry.Registry/Deregister',
        request_serializer=registry_dot_registry__pb2.Service.SerializeToString,
        response_deserializer=registry_dot_registry__pb2.EmptyResponse.FromString,
        )
    self.ListServices = channel.unary_unary(
        '/go.micro.registry.Registry/ListServices',
        request_serializer=registry_dot_registry__pb2.ListRequest.SerializeToString,
        response_deserializer=registry_dot_registry__pb2.ListResponse.FromString,
        )
    self.Watch = channel.unary_stream(
        '/go.micro.registry.Registry/Watch',
        request_serializer=registry_dot_registry__pb2.WatchRequest.SerializeToString,
        response_deserializer=registry_dot_registry__pb2.Result.FromString,
        )


class RegistryServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetService(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Register(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Deregister(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListServices(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Watch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RegistryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetService': grpc.unary_unary_rpc_method_handler(
          servicer.GetService,
          request_deserializer=registry_dot_registry__pb2.GetRequest.FromString,
          response_serializer=registry_dot_registry__pb2.GetResponse.SerializeToString,
      ),
      'Register': grpc.unary_unary_rpc_method_handler(
          servicer.Register,
          request_deserializer=registry_dot_registry__pb2.Service.FromString,
          response_serializer=registry_dot_registry__pb2.EmptyResponse.SerializeToString,
      ),
      'Deregister': grpc.unary_unary_rpc_method_handler(
          servicer.Deregister,
          request_deserializer=registry_dot_registry__pb2.Service.FromString,
          response_serializer=registry_dot_registry__pb2.EmptyResponse.SerializeToString,
      ),
      'ListServices': grpc.unary_unary_rpc_method_handler(
          servicer.ListServices,
          request_deserializer=registry_dot_registry__pb2.ListRequest.FromString,
          response_serializer=registry_dot_registry__pb2.ListResponse.SerializeToString,
      ),
      'Watch': grpc.unary_stream_rpc_method_handler(
          servicer.Watch,
          request_deserializer=registry_dot_registry__pb2.WatchRequest.FromString,
          response_serializer=registry_dot_registry__pb2.Result.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'go.micro.registry.Registry', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
