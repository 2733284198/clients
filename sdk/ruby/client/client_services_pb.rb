# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: client/client.proto for package 'go.micro.client'

require 'grpc'
require 'client/client_pb'

module Go
  module Micro
    module Client
      module Client
        # Client is the micro client interface
        class Service

          include GRPC::GenericService

          self.marshal_class_method = :encode
          self.unmarshal_class_method = :decode
          self.service_name = 'go.micro.client.Client'

          # Call allows a single request to be made
          rpc :Call, Go::Micro::Client::Request, Go::Micro::Client::Response
          # Stream is a bidirectional stream
          rpc :Stream, stream(Go::Micro::Client::Request), stream(Go::Micro::Client::Response)
          # Publish publishes a message and returns an empty Message
          rpc :Publish, Go::Micro::Client::Message, Go::Micro::Client::Message
        end

        Stub = Service.rpc_stub_class
      end
    end
  end
end
